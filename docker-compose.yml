version: "3.7"

services:
  consul:
    container_name: "consul"
    image: "consul:1.14.4"
    restart: on-failure
    volumes:
      - ./consul/server.json:/consul/config/server.json:ro
    networks:
      - global
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command:
      - "agent"

  kafka:
    container_name: "kafka"
    image: "bitnami/kafka:3.4.0"
    restart: on-failure
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka:/bitnami/kafka

  cassandra:
    container_name: "cassandra"
    image: "cassandra:4.1.0"
    restart: on-failure
    volumes:
      - cassandra_db:/var/lib/cassandra
    networks:
      - global
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=petswave


#  redis:
#    container_name: "redis"
#    image: "redis:7.0.8"
#    restart: always
#    volumes:
#      - cache:/data
#    ports:
#      - "6379:6379"
#
#  redisinsight:
#    container_name: "redisinsight"
#    image: "redislabs/redisinsight:1.13.1"
#    restart: on-failure
#    volumes:
#      - cache:/data
#    ports:
#      - "8001:8001"

volumes:
  consul:
    driver: local
  kafka:
    driver: local
  cassandra_db:
    driver: local
  cache:
    driver: local

networks:
  global:
    driver: bridge