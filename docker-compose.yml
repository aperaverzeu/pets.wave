version: "3.7"

services:
  kafka:
    container_name: "kafka"
    image: "bitnami/kafka:3.4.0"
    restart: on-failure
    volumes:
      - kafka:/bitnami/kafka
    networks:
      - global
    ports:
      - "2182:2182"
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=GzYIE-nqTIWjIGHQyPPWYQ
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,DOCKER_EXTERNAL://:2182
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092, DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:2182
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - HOST_HOSTNAME="localhost"

  kafka_ui:
    container_name: "kafka_ui"
    image: "provectuslabs/kafka-ui:v0.6.2"
    restart: on-failure
    volumes:
      - kafka:/bitnami/kafka
    networks:
      - global
    ports:
      - "9000:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kraft
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka

  cassandra:
    container_name: "cassandra"
    image: "cassandra:4.1.0"
    restart: on-failure
    volumes:
      - cassandra_db:/var/lib/cassandra
    networks:
      - global
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=petswave
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M


  postgres:
    container_name: "postgres"
    image: "postgres:15.2"
    restart: on-failure
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - global
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=Pa55word
      - POSTGRES_DB=petswave

  gateway:
    container_name: "gateway"
    build:
      context: ./gateway
    restart: on-failure
    networks:
      - global
    ports:
      - "8080:8080"
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8083/eureka
    links:
      - discovery
    depends_on:
      - discovery

  discovery:
    container_name: "discovery"
    build:
      context: ./discovery-service
    restart: on-failure
    networks:
      - global
    ports:
      - "8083:8083"
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8083/eureka

  query-service:
    container_name: "query-service"
    build:
      context: ./query-service
    restart: on-failure
    networks:
      - global
    ports:
      - "8089:8089"
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8083/eureka
      - spring.r2dbc.url=r2dbc:postgresql://postgres:5432/petswave
      - spring.r2dbc.hostname=postgres
      - spring.r2dbc.port=5432
    depends_on:
      - discovery
      - gateway
      - postgres

  data-publisher:
    container_name: "data-publisher"
    build:
      context: ./data-publisher
    restart: on-failure
    networks:
      - global
    ports:
      - "8087:8087"
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8083/eureka
      - spring.kafka.bootstrap-servers=http://kafka:9092
      - spring.cassandra.contact-points=cassandra
    depends_on:
      - discovery
      - gateway
      - cassandra
      - kafka

  data-projector:
    container_name: "data-projector"
    build:
      context: ./data-projector
    restart: on-failure
    networks:
      - global
    ports:
      - "8088:8088"
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8083/eureka
      - spring.kafka.bootstrap-servers=http://kafka:9092
      - spring.r2dbc.url=r2dbc:postgresql://postgres:5432/petswave
      - spring.r2dbc.hostname=postgres
      - spring.r2dbc.port=5432
    depends_on:
      - discovery
      - gateway
      - postgres
      - kafka

  frontend:
    container_name: "frontend"
    build:
      context: ./frontend
    restart: on-failure
    networks:
      - global
    ports:
      - "80:4200"
    depends_on:
      - discovery
      - query-service
      - data-projector
      - data-publisher
      - gateway
      - postgres
      - cassandra
      - kafka

volumes:
  consul:
    driver: local
  kafka:
    driver: local
  cassandra_db:
    driver: local
  postgres_db:
    driver: local
  cache:
    driver: local

networks:
  global:
    driver: bridge